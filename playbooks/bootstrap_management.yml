- hosts: node0
  become: true
  tasks:
  - name: Set known root password
    command: echo 'secret' | passwd root --stdin
 
  - name: Enable RootLogin in sshd_config
    lineinfile: 
        line: '{{ item.replace_to }}'
        regexp: '{{ item.search }}'
        path: /etc/ssh/sshd_config
    with_items: 
    - { search: '^\s*PermitRootLogin.*$', replace_to: 'PermitRootLogin yes' }
    - { search: '^\s*PasswordAuthentication.*$', replace_to: 'PasswordAuthentication yes' }
    notify:
    - Reload sshd service


  - name: Create the Ansible user
    user:
        name: ansible
        comment: Management account
        shell: /bin/bash
        generate_ssh_key: yes
        createhome: yes
        password: '$1$zEzNaiUh$Yck0C5lBn.8Z3w9dw6MIx1'

  - name: Enable passwordless access for the ansible user
    copy: 
        content: | 
          %ansible	ALL=(ALL)	NOPASSWD: ALL
        owner: root
        group: root
        mode: '0400'
        dest: /etc/sudoers.d/ansible

  - name: Put the ansible user required ssh (public) keys
    authorized_key:
      user: ansible
      key: '{{ item }}'
    with_items: 
    - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeuLVUUhrZ2RwvY9cTWR94LBlgNXFP6cULlVvu0m2HMZ02INJ0STgnSdUMdPCQhJtZlonH7l70umhOKSXtxxBqvJbvlGlH2377sLrgSnsvkqrW4y+d2iXdIWrmVA9qudTiBNsmO3VFButLGOj+EM3ofQ09FcByN2JYNKhujwQfZ3qn5NtdJXHTfu8lfgiPIwitpHwaU49NusW/36GPvNILTymIG3nh8hUv1dgIOyQ5pOBrY/z8h/7QsWKqSsDFb7YxkW9VQK1KBXvv8IEw16rHwf1S+BKHFc4q17xKi09RNQypjvvA/c8EvRe9xPgAeCCMuJkU17xo/iRrhwqkWkzb dmitrii@Dmitriis-MacBook-Pro.local'
    - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkmKQED+x8WmkK/BTv+lFgJyVqYwYOxS+zhad4zbj2gBdNbYfFFOJKULgPHjqhoYYN0DwDs41wjmp5wQt15qzk4bnGXcfABfsBvURG/4UAMG1PMj24vgdOxeEf0mEDG2feW2j3WahdHFbgevkrQAyhbbnkkCiBdqnU+ca5BKnfXnhG/wTzGrS6qrH0B/pMRBctL7XMW1MGbx8fd1yBTWvDGl373f71yzjI9JJZFidoa0l1VVSJlg8e6jpuasL4wWV6q13uCDyyAtbQSqVxBP5GLMuR33EpHh2sEYUlNXhB5sKX23LxqGMCjDrCl24eYJs3V/aippzmzmyYQScSOdZb root@localhost.localdomain'



  - name: Install the required packages
    yum: name='{{ item }}' state=present 
    with_items:
    - bridge-utils
    - git
    - ntp 
    - ntpdate
    - openssh-server
    - python-devel
    - sudo
    - "@Development Tools"

#  - name: Configuring eth1 interface for being a part of br-mgmt
#    copy:
#      content: |
#        NM_CONTROLLED=no
#        BOOTPROTO=none
#        TYPE=Ethernet
#        ONBOOT=yes
##        IPADDR=192.168.3.10
##        NETMASK=255.255.255.0
#        DEVICE=eth1
#        PEERDNS=no
#        BRIDGE=br-mgmt
#      dest: /etc/sysconfig/network-scripts/ifcfg-eth1
#      owner: root
#      mode: '0644'


  - name: Configuring Container management interface (br-mgmt)
    copy:
      content: |
        BOOTPROTO=static
        NM_CONTROLLED=no
        TYPE=Bridge
        DEVICE=br-mgmt
        NAME=br-mgmt
        ONBOOT=yes
        IPADDR={{ brmgmt_ipaddr }}
        NETMASK=255.255.252.0 
        IPV6INIT=no
      dest: /etc/sysconfig/network-scripts/ifcfg-br-mgmt
      owner: root
      mode: '0644'

  handlers:
  - name: Reload sshd service
    service: name=sshd state=restarted 



