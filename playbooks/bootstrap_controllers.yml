- hosts: controllers
  become: true
  tasks:

  - name: Loading vars
    include_vars: ../virt_infra/infra_vars.yml


  - name: Set install the inventory hostname as hostname
    hostname: name='{{ inventory_hostname }}'

  - name: Installing required packages
    yum: name='{{ item }}' state=present
    with_items:
    - bridge-utils
    - iputils
    - lsof
    - lvm2
    - ntp
    - ntpdate
    - openssh-server
    - sudo
    - tcpdump
    - python

  - name: Ensure the modules bonding and 8021q are loaded when booting
    lineinfile:
      path: /etc/modules-load.d/openstack-ansible.conf
      line: '{{ item }}'
      regexp: '^\s*{{ item }}.*$'
      create: yes
    with_items:
    - bonding
    - 8021q

  - name: Start ntpd service
    service: name=ntpd state=started enabled=on

  - name: Stop the postfix service (since we do not need it)
    service: name=postfix state=stopped enabled=off 

  - name: Create the Ansible user
    user:
        name: ansible
        comment: Management account
        shell: /bin/bash
        generate_ssh_key: yes
        createhome: yes
        password: '$1$zEzNaiUh$Yck0C5lBn.8Z3w9dw6MIx1'

  - name: Enable passwordless access for the ansible user
    copy:
        content: |
          %ansible      ALL=(ALL)       NOPASSWD: ALL
        owner: root
        group: root
        mode: '0400'
        dest: /etc/sudoers.d/ansible

  - name: Put the ansible user required ssh (public) keys
    authorized_key:
      user: root
      key: '{{ item }}'
    with_items:
    - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBqIIAJCDaBkuaJkHpnf0Qx+pK5VemyFwlKxWUEREb+Cmp+R7aLOolhm7hAmWq5Qcp9XMyG8/D/VqceOtbJeUQNhue6rRdQ++3/zwAV0ezr3kEvb7nunMuRu14r+Z4G1448JWSIf1gqNpi28877Uhg8XRS4kYEUxsTabZIM0oHQmOacy7mBZWL6TugMiv4ev6a8zeVaEYlkC/Zn0Nnup2a6cgf32pNtVfIhVtGFeervmWYgK/WU8Ez6jVxc9bY4SlPPFVVeDIXdt74uTzNufuB0xMQk3y8AoEqi4IzUReIWWniFEIyjZwMSzyneFZcGqx80SHihW3peLqhZOR/OJK/ root@ansible-host'
    - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwd2aaHbXGS69xW/0zJZNpfm0gTEid/PWZsiiEwWYBV3vGmKW34kylk7M3XhVmCr4eauRkz9phChpyy56jw24x+rrQkn3hm19ViyTo0Vk3nmxeHLaH621sJRk5TKJbbHNGcWcY47iov4NusDji/d3xmnJ3E8X1fIDoObNnEp+EEqqEwv/0xS+Lu1dfblqDP6pFPJVrXlBqSsAontPv2nfvsaZx14Pex+rrfj5pWoJYt+IzK5RNwGLsgeeQX9+PWoCsXN0Sa7ojwDwUY9o4LTK0hf1YXRoe5/fBilXAnMd3PwyHHARPyX8pU1JSK8fUVy5RxJ3jjRutvNEQ9OHuNt4d root@localhost.localdomain'

  - name: Configure the cinder-volumes volume group
    lvg:
      pv_options: '--metadatasize 2048'
      pvs: "{{ pvs_devices }}"
      vg: cinder-volumes
    when: "{{ pvs_devices is defined }}"

  - include_tasks: network_cfg.yml

#  - name: Creating the VLAN interfaces
#    copy:
#      content: |
#        {% if item.vlanid == 0 %}
#        DEVICE=eth2
#        {% else %}
#        DEVICE=eth2.{{ item.vlanid }}
#        {% endif %}
#        VLAN_ID={{ item.vlanid }}
#        TYPE=Ethernet
#        BOOTPROTO=none
#        ONBOOT=yes
#        PEERDNS=no
#        VLAN=yes
#        NM_CONTROLLED=no
#        {% if item.bridge is defined %}
#        BRIDGE={{ item.bridge }}
#        {% endif %}
#      dest: /etc/sysconfig/network-scripts/ifcfg-eth2.{{ item.vlanid }}
#    with_items:
#    - { vlanid: 10, bridge: br-mgmt }
#    - { vlanid: 20, bridge: br-storage }
#    - { vlanid: 30, bridge: br-vxlan }
#    - { vlanid: 0, bridge: br-vlan }
#
#
#  - name: Creating bridges
#    copy:
#      content: |
#        BOOTPROTO=none
#        NM_CONTROLLED=no
#        TYPE=Bridge
#        DEVICE={{ item.brname }}
#        NAME={{ item.brname }}
#        ONBOOT=yes
#        {% if item.ipaddr is defined %}
#        IPADDR={{ item.ipaddr }}
#        NETMASK={{ item.netmask }}
#        {% endif %}
#        IPV6INIT=no
#      dest: /etc/sysconfig/network-scripts/ifcfg-{{ item.brname }}
#      owner: root
#      mode: '0644'
#    with_items:
#    - { brname: br-mgmt, iface: eth2.10, ipaddr: "{{ brmgmt_ipaddr }}", netmask: "{{ brmgmt_netmask }}" }
#    - { brname: br-storage, iface: eth2.20 } #, ipaddr: "{{ brstorage_ipaddr }}", netmask: "{{ brstorage_netmask }}" }
#    - { brname: br-vxlan, iface: eth2.30 }
#    - { brname: br-vlan, iface: eth2 }
#
#
